# I prefer "handmade" make files, it is a little bit of more worktime to start with
# but I can read them, others can, and I know what they do!

BUILD_DIR_PURE := build.baremetal
BUILD_DIR := $(BUILD_DIR_PURE)/

LIB_DIR :=../baremetal
INC_DIR_LIBRARY := $(LIB_DIR)/lib2835
INC_DIR_PITREX := ../
SETTINGS = settings

CFLAGS := -Ofast -I$(INC_DIR_PITREX) -I$(INC_DIR_LIBRARY) -L$(LIB_DIR) -mfloat-abi=hard -nostartfiles -mfpu=vfp -march=armv6zk -mtune=arm1176jzf-s -DSETTINGS_DIR="\"$(SETTINGS)\"" -DRPI0 -DFREESTANDING -DPITREX_DEBUG -DMHZ1000 -DLOADER_START=0x4000000
CC	= arm-none-eabi-gcc
AS	= $(CC)
LD	= arm-none-eabi-ld
AR	= arm-none-eabi-ar

.PHONY: dirCheck

all: dirCheck $(BUILD_DIR)vectrexInterface.o $(BUILD_DIR)baremetalUtil.o $(BUILD_DIR)osWrapper.o

dirCheck:
	if [ ! -d $(BUILD_DIR_PURE) ]; then mkdir $(BUILD_DIR_PURE); fi

$(BUILD_DIR)vectrexInterface.o: vectrexInterface.c vectrexInterface.h commands.i rasterFont.i vectorFont.i
	$(CC) $(CFLAGS) -c vectrexInterface.c -o $(BUILD_DIR)vectrexInterface.o

$(BUILD_DIR)baremetalUtil.o: baremetalUtil.c baremetalUtil.h 
	$(CC) $(CFLAGS) -c baremetalUtil.c -o $(BUILD_DIR)baremetalUtil.o

$(BUILD_DIR)osWrapper.o: osWrapper.c osWrapper.h 
	$(CC) $(CFLAGS) -c osWrapper.c -o $(BUILD_DIR)osWrapper.o

clean:
	$(RM) $(BUILD_DIR)*.*
